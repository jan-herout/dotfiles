#!/bin/bash
export PATH=$PATH:~/bin:~/sbin:~/.local/bin

# golang
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:~/go/bin

export LD_LIBRARY_PATH=$HOME/sbin/$PWD/usr/lib/oracle/21/client64/lib:$LD_LIBRARY_PATH
export PATH=$PWD/usr/lib/oracle/21/client64/bin:$PATH

# aliases
alias vim="nvim"
alias cls="clear"
alias config="export __CWD__=`pwd` && cd ~/dotfiles && nvim .bashrc_addons &&  cd $__CWD__  && unset __CWD__"
alias gac="git add --all && git commit"
alias ga="git add --all"
alias gp="git pull --rebase && git push"
alias ..="cd .."
alias v="vim ."
alias ...="cd .. && cd .."
alias src="source ~/.bashrc"
alias vc="export __CWD__=`pwd` && cd ~/dotfiles/.config/nvim && nvim . &&  cd $__CWD__  && unset __CWD__"
export EDITOR=nvim


export PRESS_MODEL_DIR=/home/jan/o2/bimeta/press/models.lin
export PRESS_VIEW_DIR=/home/jan/o2/bimeta/press
export PRESS_PROFILE_DIR=/home/jan/o2/bimeta/press/profiles.lin
export PRESS_PDC_METADATA_FILE=/home/jan/o2/bimeta/ModelMetadata/PDCMetadata.json
export PRESS_PRODUCTION_DDL_DIR=/home/jan/o2/svn-production/db/Teradata/DDL


#################################Å¡
# pyenv
# Load pyenv automatically by appending
# the following to
# ~/.bash_profile if it exists, otherwise ~/.profile (for login shells)
# and ~/.bashrc (for interactive shells) :

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

eval "$(pyenv virtualenv-init -)"
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# python settings
alias flake8="flake8 --max-line-length=88"

# ph completions
source '/home/jan/.bash_completions/ph.sh'

# zoxide a fzf
eval "$(zoxide init bash)"

if command -v fzf &>/dev/null
then
	[ -f /usr/share/doc/fzf/examples/key-bindings.bash ] && source /usr/share/doc/fzf/examples/key-bindings.bash
	[ -f /usr/share/doc/fzf/examples/completion.bash ] && source /usr/share/doc/fzf/examples/completion.bash
	
	# use fdfind instead of find
	if command -v fdfind &>/dev/null
	then
		export FZF_DEFAULT_COMMAND="fdfind --hidden --strip-cwd-prefix --exclude .git --no-ignore-vcs"
		export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
		export FZF_ALT_C_COMMAND="fdfind --type=d --hidden --strip-cwd-prefix --exclude .git --no-ignore-vcs"
		
		# use fdfind to list path candidates
		_fzf_compgen_path() {
			fdfind --hidden --exclude .git . "$1"
		}

		# use fdfind to generate list for dir completion
		_fzf_compgen_dir() {
			fdfind --type=d --hidden --exclude -git . "$1"
		}
	fi

	# use batcat and eza for preview in fzf
	if command -v batcat &>/dev/null; then
		export MANPAGER="bash -c 'col -bx | batcat -l man -p'" # colorized man
		export FZF_CTRL_T_OPTS="--preview 'batcat -n --color=always --line-range :500 {}'"

		help() {
			"$@" --help 2>&1 | batcat --plain 
		}
		_fzf_comprun() {
			local command=$1
			shift
			case "$command" in
				cd)		fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
				export|unset)	fzf --preview "eval 'echo \$' {}"	"$@" ;;
				ssh)		fzf --preview 'dig {}'			"$@" ;;
				*)		fzf --preview "'batcat -n --color=always --line-range :500 {}'" "$@" ;;
			esac
		}
	fi

	if command -v eza &>/dev/null; then
		export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"
	fi
fi



# batcat
if command -v batcat &>/dev/null
then
	alias bat="batcat"
fi

# eza
if command -v eza &>/dev/null
then
	alias ll="/usr/bin/ls -lA"
	alias la="/usr/bin/ls -A"
	alias ls="eza --color=always --long --git -b --icons --no-time --no-user --no-permissions -h"
fi

# proxy functions
proxon () {
	source ~/bin/set-proxy-on
}

proxoff () {
	source ~/bin/set-proxy-off
}

teams () {
	# source ~/bin/set-proxy-on
	# firefox --private-window  "https://teams.microsoft.com/v2/?clientexperience=t2&ring=ring3_6" >/dev/null 2>/dev/null  &
	google-chrome "https://teams.microsoft.com/v2/?clientexperience=t2&ring=ring3_6" >/dev/null 2>/dev/null  &
}

# nvm a node.js
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# lf icons
export LF_ICONS=$(cat $HOME/.config/lf/icons)
