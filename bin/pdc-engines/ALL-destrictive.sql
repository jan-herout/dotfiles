/* set echo on */
/*
    Skript byl upraven pro novou verzi PDC, a je bezpecne ho pouzit.
    Pozor, nedochazi k modifikaci CTRL_PARAMETERS a CTRL_TASK_PARAMETERS, ponechavame hodnoty z produkce
    (protoze doslo ke strukturalni zmene)
*/
delete from CTRL_JOB;
delete from CTRL_JOB_DEPENDENCY;
delete from CTRL_JOB_TABLE_REF;
delete from CTRL_STREAM;
delete from CTRL_STREAM_DEPENDENCY;
delete from CTRL_STREAM_PLAN_REF;

-- metadata noveho sveta
DELETE FROM CTRL_STG_SOURCE;
DELETE FROM CTRL_STG_SOURCE_PLAN_REF;
DELETE FROM STAT_STG_SOURCE;
DELETE FROM CTRL_LND_SOURCE;
DELETE FROM CTRL_LND_SOURCE_PLAN_REF;
DELETE FROM STAT_LND_SOURCE;

/* s:\SVN-DEV\Package\EDW_RFC31325_CIS92028_07P000_New_ETL_Deploy_PDC\DB\PDC\10_EDW\01_BASE.sql */
/* ENGINE BASE */
MERGE INTO CTRL_JOB T USING (
  SELECT
    'Initialize_part_1_00'         AS JOB_NAME
    ,'INITIALIZATION_00'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/Init_Initialize.pl -engine 0 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INITIALIZATION'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND'                                    AS JOB_CATEGORY
    ,'ORACLE_PROCEDURE'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,0                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;

MERGE INTO CTRL_JOB T USING (
  SELECT
    'Initialize_part_2_00'         AS JOB_NAME
    ,'INITIALIZATION_00'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/Init_Initialize_end.pl -engine 0 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INITIALIZATION'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND'                                    AS JOB_CATEGORY
    ,'ORACLE_PROCEDURE'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,0                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;   
		

MERGE INTO CTRL_JOB_DEPENDENCY T USING (
  SELECT
    'Initialize_part_2_00'         AS JOB_NAME
    ,'Initialize_part_1_00'          AS PARENT_JOB_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME AND S.PARENT_JOB_NAME = T.PARENT_JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,PARENT_JOB_NAME,REL_TYPE)
  VALUES (S.JOB_NAME,S.PARENT_JOB_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;

  
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'INITIALIZATION_00'                AS STREAM_NAME
    ,'Stream contains jobs for initialization'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'INITIALIZATION_00'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		

/* ABORT */

MERGE INTO CTRL_STREAM T USING (
  SELECT
    'ABORT_INFA_00'                AS STREAM_NAME
    ,'Abort stream for informatica jobs'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
    

DELETE FROM CTRL_JOB WHERE STREAM_NAME = 'ABORT_INFA_00';
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_00','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_01','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_02','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_03','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_04','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_05','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_06','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_07','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_08','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_09','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_10','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_11','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_12','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_13','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_14','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_15','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_16','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_17','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_18','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_19','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_20','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_21','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_22','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_23','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_24','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_25','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_26','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_27','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_28','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_29','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_30','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_31','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_32','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_33','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_34','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_35','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_36','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_37','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_38','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_39','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_40','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_41','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_42','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_43','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_44','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_45','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_46','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_47','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_48','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_49','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_00_50','ABORT_INFA_00',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,0,'Abort INFA job',NULL,NULL);


/* CLEANING_EDW */

MERGE INTO CTRL_JOB T USING (
  SELECT
    'Cleaning_EDW_00'         AS JOB_NAME
    ,'CLEANING_EDW_00'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/cleaning.pl -engine 0 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'CLEANING'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'COMMAND'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,0                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'CLEANING_EDW_00'                AS STREAM_NAME
    ,'Cleaning EDW job'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'CLEANING_EDW_00'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'CLEANING_EDW_00'                AS STREAM_NAME
    ,'INITIALIZATION_00'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;



/* INIT_EDW */

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.RETENTION_PREPARE_EDW_00'         AS JOB_NAME
    ,'INIT_EDW_00'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.retention_prepare.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_EDW'               					  	AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,0                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'INIT_EDW_00'                AS STREAM_NAME
    ,'INIT_EDW_00'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'INIT_EDW_00'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'INIT_EDW_00'                AS STREAM_NAME
    ,'CLEANING_EDW_00'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;
		
		
/* FINAL_EDW */

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_FINAL._FINAL.PROC_LOG_EVENT_EDW_END'         AS JOB_NAME
    ,'FINAL_EDW_00'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_final._final.proc_log_event_edw_end.tpt'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'FINALIZATION'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,0                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_FINAL._FINAL.GEN_I_FILE_EDW_FINISHED'         AS JOB_NAME
    ,'FINAL_EDW_00'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'%PMRootDir%/Cmd/gen_i_file_edw_finished.bat'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'FINALIZATION'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'COMMAND'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,0                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'FINAL_EDW_00'                AS STREAM_NAME
    ,'FINAL_EDW_00'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'FINAL_EDW_00'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'FINAL_EDW_00'                AS STREAM_NAME
    ,'INIT_EDW_00'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;
    
    
commit;
/*s:\SVN-DEV\Package\EDW_RFC31325_CIS92028_07P000_New_ETL_Deploy_PDC\DB\PDC\20_LND\01_BASE.sql*/
/* ENGINE BASE */
MERGE INTO CTRL_JOB T USING (
  SELECT
    'Initialize_part_1_01'         AS JOB_NAME
    ,'INITIALIZATION_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/Init_Initialize.pl -engine 1 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INITIALIZATION'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND'                                    AS JOB_CATEGORY
    ,'ORACLE_PROCEDURE'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;

MERGE INTO CTRL_JOB T USING (
  SELECT
    'Initialize_part_2_01'         AS JOB_NAME
    ,'INITIALIZATION_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/Init_Initialize_end.pl -engine 1 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INITIALIZATION'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND'                                    AS JOB_CATEGORY
    ,'ORACLE_PROCEDURE'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;   
		

MERGE INTO CTRL_JOB_DEPENDENCY T USING (
  SELECT
    'Initialize_part_2_01'         AS JOB_NAME
    ,'Initialize_part_1_01'          AS PARENT_JOB_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME AND S.PARENT_JOB_NAME = T.PARENT_JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,PARENT_JOB_NAME,REL_TYPE)
  VALUES (S.JOB_NAME,S.PARENT_JOB_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;

  
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'INITIALIZATION_01'                AS STREAM_NAME
    ,'Stream contains jobs for initialization'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'INITIALIZATION_01'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		

/* ABORT */

MERGE INTO CTRL_STREAM T USING (
  SELECT
    'ABORT_INFA_01'                AS STREAM_NAME
    ,'Abort stream for informatica jobs'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
    

DELETE FROM CTRL_JOB WHERE STREAM_NAME = 'ABORT_INFA_01';
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_00','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_01','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_02','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_03','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_04','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_05','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_06','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_07','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_08','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_09','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_10','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_11','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_12','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_13','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_14','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_15','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_16','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_17','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_18','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_19','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_20','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_21','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_22','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_23','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_24','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_25','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_26','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_27','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_28','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_29','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_30','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_31','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_32','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_33','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_34','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_35','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_36','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_37','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_38','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_39','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_40','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_41','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_42','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_43','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_44','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_45','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_46','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_47','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_48','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_49','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_01_50','ABORT_INFA_01',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,1,'Abort INFA job',NULL,NULL);


/* CLEANING_EDW */

MERGE INTO CTRL_JOB T USING (
  SELECT
    'Cleaning_LND_01'         AS JOB_NAME
    ,'CLEANING_LND_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/cleaning.pl -engine 1 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'CLEANING'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'COMMAND'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'CLEANING_LND_01'                AS STREAM_NAME
    ,'Cleaning LND job'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'CLEANING_LND_01'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'CLEANING_LND_01'                AS STREAM_NAME
    ,'INITIALIZATION_01'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;



/* INIT_LND */

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.RETENTION_PREPARE_LND_01'         AS JOB_NAME
    ,'INIT_LND_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.retention_prepare.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'INIT_LND_01'                AS STREAM_NAME
    ,'INIT_LND_01'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'INIT_LND_01'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'INIT_LND_01'                AS STREAM_NAME
    ,'CLEANING_LND_01'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;
		
		
/* FINAL_LND */

MERGE INTO CTRL_JOB T USING (
  SELECT
    'FINAL_LND'         AS JOB_NAME
    ,'FINAL_LND_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'@echo on'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'FINALIZATION'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'COMMAND'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'FINAL_LND_01'                AS STREAM_NAME
    ,'FINAL_LND_01'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'FINAL_LND_01'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'FINAL_LND_01'                AS STREAM_NAME
    ,'INIT_LND_01'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;
    
commit;
/*s:\SVN-DEV\Package\EDW_RFC31325_CIS92028_07P000_New_ETL_Deploy_PDC\DB\PDC\30_LND_I\01_BASE.sql*/
/* ENGINE BASE */
MERGE INTO CTRL_JOB T USING (
  SELECT
    'Initialize_part_1_02'         AS JOB_NAME
    ,'INITIALIZATION_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/Init_Initialize.pl -engine 2 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INITIALIZATION'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND'                                    AS JOB_CATEGORY
    ,'ORACLE_PROCEDURE'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;

MERGE INTO CTRL_JOB T USING (
  SELECT
    'Initialize_part_2_02'         AS JOB_NAME
    ,'INITIALIZATION_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/Init_Initialize_end.pl -engine 2 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INITIALIZATION'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND'                                    AS JOB_CATEGORY
    ,'ORACLE_PROCEDURE'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;   
		

MERGE INTO CTRL_JOB_DEPENDENCY T USING (
  SELECT
    'Initialize_part_2_02'         AS JOB_NAME
    ,'Initialize_part_1_02'          AS PARENT_JOB_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME AND S.PARENT_JOB_NAME = T.PARENT_JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,PARENT_JOB_NAME,REL_TYPE)
  VALUES (S.JOB_NAME,S.PARENT_JOB_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;

  
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'INITIALIZATION_02'                AS STREAM_NAME
    ,'Stream contains jobs for initialization'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'INITIALIZATION_02'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		

/* ABORT */

MERGE INTO CTRL_STREAM T USING (
  SELECT
    'ABORT_INFA_02'                AS STREAM_NAME
    ,'Abort stream for informatica jobs'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
    

DELETE FROM CTRL_JOB WHERE STREAM_NAME = 'ABORT_INFA_02';
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_00','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_01','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_02','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_03','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_04','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_05','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_06','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_07','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_08','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_09','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_10','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_11','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_12','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_13','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_14','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_15','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_16','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_17','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_18','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_19','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_20','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_21','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_22','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_23','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_24','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_25','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_26','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_27','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_28','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_29','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_30','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_31','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_32','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_33','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_34','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_35','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_36','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_37','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_38','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_39','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_40','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_41','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_42','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_43','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_44','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_45','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_46','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_47','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_48','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_49','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);
INSERT INTO CTRL_JOB VALUES('ABORT_JOB_02_50','ABORT_INFA_02',0,NULL,NULL,'ABORT',NULL,'INFORMATICA','ABORT_INFORMATICA','SMALL',1,1,1,100,NULL,NULL,2,'Abort INFA job',NULL,NULL);


/* CLEANING_EDW */

MERGE INTO CTRL_JOB T USING (
  SELECT
    'Cleaning_LND_I_02'         AS JOB_NAME
    ,'CLEANING_LND_I_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'perl %PMRootDir%/Bin/Framework/cleaning.pl -engine 2 -x 9 -debug'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'CLEANING'               					  	AS PHASE
    ,NULL                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'COMMAND'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,3                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'CLEANING_LND_I_02'                AS STREAM_NAME
    ,'Cleaning LND_I job'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'CLEANING_LND_I_02'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'CLEANING_LND_I_02'                AS STREAM_NAME
    ,'INITIALIZATION_02'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;



/* INIT_LND_I */
MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.RETENTION_PREPARE_LND_I_02'         AS JOB_NAME
    ,'INIT_LND_I_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.retention_prepare.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND_I'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'INIT_LND_I_02'                AS STREAM_NAME
    ,'INIT_LND_I_02'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'INIT_LND_I_02'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;   
		

MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'INIT_LND_I_02'                AS STREAM_NAME
    ,'CLEANING_LND_I_02'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE; 
		
		
/* FINAL_LND */

MERGE INTO CTRL_JOB T USING (
  SELECT
    'FINAL_LND_I'         AS JOB_NAME
    ,'FINAL_LND_I_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'@echo on'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'FINALIZATION'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'COMMAND'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    
MERGE INTO CTRL_STREAM T USING (
  SELECT
    'FINAL_LND_I_02'                AS STREAM_NAME
    ,'FINAL_LND_I_02'               AS STREAM_DESC
    ,NULL                                         AS NOTE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,STREAM_DESC,NOTE)
  VALUES (S.STREAM_NAME,S.STREAM_DESC,S.NOTE) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_DESC = S.STREAM_DESC  
    ,NOTE = S.NOTE;
		

MERGE INTO CTRL_STREAM_PLAN_REF T USING (
  SELECT
    'FINAL_LND_I_02'                									AS STREAM_NAME
    ,'WR001007E'                                   AS RUNPLAN
    ,'CZ'																					AS COUNTRY_CD
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,RUNPLAN,COUNTRY_CD)
  VALUES (S.STREAM_NAME,S.RUNPLAN,S.COUNTRY_CD) 
WHEN MATCHED THEN
  UPDATE SET
    RUNPLAN = S.RUNPLAN
		,COUNTRY_CD = S.COUNTRY_CD;    
		
MERGE INTO CTRL_STREAM_DEPENDENCY T USING (
  SELECT
    'FINAL_LND_I_02'                AS STREAM_NAME
    ,'INIT_LND_I_02'               AS PARENT_STREAM_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.STREAM_NAME = T.STREAM_NAME AND S.PARENT_STREAM_NAME = T.PARENT_STREAM_NAME)
WHEN NOT MATCHED THEN 
  INSERT (STREAM_NAME,PARENT_STREAM_NAME,REL_TYPE)
  VALUES (S.STREAM_NAME,S.PARENT_STREAM_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;
    
commit;
/* 
Skip pro ABORT joby - zviditelnA>nA pro EDW engine
Varianta kterAV rozbije GDW, ale "mAL", a je snAVz vratnAV, umoLlnA EDW enginu joby tiLVe oskipovat.
*/

update ctrl_job
set job_category = 'COMMAND'
where job_category = 'INFORMATICA' and phase = 'ABORT' and engine_id = 0;
    
/* Rollback:
    update ctrl_job
    set job_category = 'INFORMATICA'
    where job_category = 'COMMAND' and phase = 'ABORT' and engine_id=0
*/

commit;


MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.STATS_QUE_LND_01'         AS JOB_NAME
    ,'INIT_LND_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.prepare_stats_que.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.STATS_QUE_LND_I_02'         AS JOB_NAME
    ,'INIT_LND_I_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.prepare_stats_que.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND_I'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    commit;
    
 
MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.PROC_STATS_CNFG_LND_01'         AS JOB_NAME
    ,'INIT_LND_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.prepare_stats_cnfg.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.PROC_STATS_CNFG_LND_I_02'         AS JOB_NAME
    ,'INIT_LND_I_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.prepare_stats_cnfg.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND_I'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    commit;
    
/* Dependency */

  
MERGE INTO CTRL_JOB_DEPENDENCY T USING (
  SELECT
    '_INIT._INIT.PROC_STATS_CNFG_LND_01'         AS JOB_NAME
    ,'_INIT._INIT.STATS_QUE_LND_01'          AS PARENT_JOB_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME AND S.PARENT_JOB_NAME = T.PARENT_JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,PARENT_JOB_NAME,REL_TYPE)
  VALUES (S.JOB_NAME,S.PARENT_JOB_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;

    
MERGE INTO CTRL_JOB_DEPENDENCY T USING (
  SELECT
    '_INIT._INIT.PROC_STATS_CNFG_LND_I_02'         AS JOB_NAME
    ,'_INIT._INIT.STATS_QUE_LND__I_02'          AS PARENT_JOB_NAME
    ,NULL                                         AS REL_TYPE
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME AND S.PARENT_JOB_NAME = T.PARENT_JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,PARENT_JOB_NAME,REL_TYPE)
  VALUES (S.JOB_NAME,S.PARENT_JOB_NAME,S.REL_TYPE) 
WHEN MATCHED THEN
  UPDATE SET
    REL_TYPE = S.REL_TYPE;
    
commit;


--NEW_VER--MERGE 
--NEW_VER--INTO 
--NEW_VER--                 CTRL_TASK_PARAMETERS T
--NEW_VER--USING
--NEW_VER--                 ( SELECT
--NEW_VER--                         'SMALL'                  AS PARAM_NAME
--NEW_VER--                       , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                       , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                       , 10                       AS PARAM_VAL_INT_MAX
--NEW_VER--                       , 10                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                       , NULL                     AS PARAM_DIMENSION
--NEW_VER--                       , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                       , NULL                     AS TASK_TYPE
--NEW_VER--                       , 0                        AS VALID_FROM
--NEW_VER--                       , 99999999                 AS VALID_TO
--NEW_VER--                       , 1                        AS ENGINE_ID
--NEW_VER--                       , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                       , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                         DUAL
--NEW_VER--                  
--NEW_VER--                 UNION ALL
--NEW_VER--                  
--NEW_VER--                 SELECT
--NEW_VER--                        'MEDIUM'                 AS PARAM_NAME
--NEW_VER--                      , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                      , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                      , 20                       AS PARAM_VAL_INT_MAX
--NEW_VER--                      , 20                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                      , NULL                     AS PARAM_DIMENSION
--NEW_VER--                      , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                      , NULL                     AS TASK_TYPE
--NEW_VER--                      , 0                        AS VALID_FROM
--NEW_VER--                      , 99999999                 AS VALID_TO
--NEW_VER--                      , 1                        AS ENGINE_ID
--NEW_VER--                      , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                      , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                        DUAL
--NEW_VER--                  
--NEW_VER--                 UNION ALL
--NEW_VER--                  
--NEW_VER--                 SELECT
--NEW_VER--                        'LARGE'                  AS PARAM_NAME
--NEW_VER--                      , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                      , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                      , 40                       AS PARAM_VAL_INT_MAX
--NEW_VER--                      , 40                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                      , NULL                     AS PARAM_DIMENSION
--NEW_VER--                      , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                      , NULL                     AS TASK_TYPE
--NEW_VER--                      , 0                        AS VALID_FROM
--NEW_VER--                      , 99999999                 AS VALID_TO
--NEW_VER--                      , 1                        AS ENGINE_ID
--NEW_VER--                      , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                      , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                        DUAL
--NEW_VER--                  
--NEW_VER--                 UNION ALL
--NEW_VER--                  
--NEW_VER--                 SELECT
--NEW_VER--                        'EXCEPTIONAL'            AS PARAM_NAME
--NEW_VER--                      , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                      , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                      , 80                       AS PARAM_VAL_INT_MAX
--NEW_VER--                      , 80                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                      , NULL                     AS PARAM_DIMENSION
--NEW_VER--                      , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                      , NULL                     AS TASK_TYPE
--NEW_VER--                      , 0                        AS VALID_FROM
--NEW_VER--                      , 99999999                 AS VALID_TO
--NEW_VER--                      , 1                        AS ENGINE_ID
--NEW_VER--                      , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                      , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                        DUAL ) 
--NEW_VER--                 S 
--NEW_VER--ON 
--NEW_VER--                 (
--NEW_VER--                                  T.PARAM_NAME       = S.PARAM_NAME
--NEW_VER--                                  AND T.PARAM_TYPE   = S.PARAM_TYPE
--NEW_VER--                                  AND T.TASK_SUBTYPE = S.TASK_SUBTYPE
--NEW_VER--                                  AND T.VALID_FROM   = S.VALID_FROM
--NEW_VER--                                  AND T.VALID_TO     = S.VALID_TO
--NEW_VER--                                  AND T.ENGINE_ID    = S.ENGINE_ID
--NEW_VER--                                  AND T.SYSTEM_NAME  = S.SYSTEM_NAME
--NEW_VER--                 )
--NEW_VER--WHEN NOT MATCHED 
--NEW_VER--                 THEN 
--NEW_VER--INSERT 
--NEW_VER--       (
--NEW_VER--              PARAM_NAME
--NEW_VER--            , PARAM_TYPE
--NEW_VER--            , PARAM_VAL_INT_CURR
--NEW_VER--            , PARAM_VAL_INT_MAX
--NEW_VER--            , PARAM_VAL_INT_DEFAULT
--NEW_VER--            , PARAM_DIMENSION
--NEW_VER--            , TASK_SUBTYPE
--NEW_VER--            , TASK_TYPE
--NEW_VER--            , VALID_FROM
--NEW_VER--            , VALID_TO
--NEW_VER--            , ENGINE_ID
--NEW_VER--            , SYSTEM_NAME
--NEW_VER--       ) 
--NEW_VER--       VALUES (
--NEW_VER--              S.PARAM_NAME
--NEW_VER--            , S.PARAM_TYPE
--NEW_VER--            , S.PARAM_VAL_INT_CURR
--NEW_VER--            , S.PARAM_VAL_INT_MAX
--NEW_VER--            , S.PARAM_VAL_INT_DEFAULT
--NEW_VER--            , S.PARAM_DIMENSION
--NEW_VER--            , S.TASK_SUBTYPE
--NEW_VER--            , S.TASK_TYPE
--NEW_VER--            , S.VALID_FROM
--NEW_VER--            , S.VALID_TO
--NEW_VER--            , S.ENGINE_ID
--NEW_VER--            , S.SYSTEM_NAME
--NEW_VER--       );
--NEW_VER--       
--NEW_VER---- LND_I
--NEW_VER--MERGE 
--NEW_VER--INTO 
--NEW_VER--                 CTRL_TASK_PARAMETERS T
--NEW_VER--USING
--NEW_VER--                 ( SELECT
--NEW_VER--                         'SMALL'                  AS PARAM_NAME
--NEW_VER--                       , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                       , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                       , 10                       AS PARAM_VAL_INT_MAX
--NEW_VER--                       , 10                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                       , NULL                     AS PARAM_DIMENSION
--NEW_VER--                       , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                       , NULL                     AS TASK_TYPE
--NEW_VER--                       , 0                        AS VALID_FROM
--NEW_VER--                       , 99999999                 AS VALID_TO
--NEW_VER--                       , 2                        AS ENGINE_ID
--NEW_VER--                       , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                       , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                         DUAL
--NEW_VER--                  
--NEW_VER--                 UNION ALL
--NEW_VER--                  
--NEW_VER--                 SELECT
--NEW_VER--                        'MEDIUM'                 AS PARAM_NAME
--NEW_VER--                      , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                      , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                      , 20                       AS PARAM_VAL_INT_MAX
--NEW_VER--                      , 20                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                      , NULL                     AS PARAM_DIMENSION
--NEW_VER--                      , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                      , NULL                     AS TASK_TYPE
--NEW_VER--                      , 0                        AS VALID_FROM
--NEW_VER--                      , 99999999                 AS VALID_TO
--NEW_VER--                      , 2                        AS ENGINE_ID
--NEW_VER--                      , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                      , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                        DUAL
--NEW_VER--                  
--NEW_VER--                 UNION ALL
--NEW_VER--                  
--NEW_VER--                 SELECT
--NEW_VER--                        'LARGE'                  AS PARAM_NAME
--NEW_VER--                      , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                      , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                      , 40                       AS PARAM_VAL_INT_MAX
--NEW_VER--                      , 40                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                      , NULL                     AS PARAM_DIMENSION
--NEW_VER--                      , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                      , NULL                     AS TASK_TYPE
--NEW_VER--                      , 0                        AS VALID_FROM
--NEW_VER--                      , 99999999                 AS VALID_TO
--NEW_VER--                      , 2                        AS ENGINE_ID
--NEW_VER--                      , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                      , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                        DUAL
--NEW_VER--                  
--NEW_VER--                 UNION ALL
--NEW_VER--                  
--NEW_VER--                 SELECT
--NEW_VER--                        'EXCEPTIONAL'            AS PARAM_NAME
--NEW_VER--                      , 'TOUGH_CATEGORY_CONTROL' AS PARAM_TYPE
--NEW_VER--                      , 0                        AS PARAM_VAL_INT_CURR
--NEW_VER--                      , 80                       AS PARAM_VAL_INT_MAX
--NEW_VER--                      , 80                       AS PARAM_VAL_INT_DEFAULT
--NEW_VER--                      , NULL                     AS PARAM_DIMENSION
--NEW_VER--                      , 'COMMAND_EDW'            AS TASK_SUBTYPE
--NEW_VER--                      , NULL                     AS TASK_TYPE
--NEW_VER--                      , 0                        AS VALID_FROM
--NEW_VER--                      , 99999999                 AS VALID_TO
--NEW_VER--                      , 2                        AS ENGINE_ID
--NEW_VER--                      , 'NTINFOT401_EDW'         AS SYSTEM_NAME
--NEW_VER--                      , NULL                     AS DESCRIPTION
--NEW_VER--                 FROM 
--NEW_VER--                        DUAL ) 
--NEW_VER--                 S 
--NEW_VER--ON 
--NEW_VER--                 (
--NEW_VER--                                  T.PARAM_NAME       = S.PARAM_NAME
--NEW_VER--                                  AND T.PARAM_TYPE   = S.PARAM_TYPE
--NEW_VER--                                  AND T.TASK_SUBTYPE = S.TASK_SUBTYPE
--NEW_VER--                                  AND T.VALID_FROM   = S.VALID_FROM
--NEW_VER--                                  AND T.VALID_TO     = S.VALID_TO
--NEW_VER--                                  AND T.ENGINE_ID    = S.ENGINE_ID
--NEW_VER--                                  AND T.SYSTEM_NAME  = S.SYSTEM_NAME
--NEW_VER--                 )
--NEW_VER--WHEN NOT MATCHED 
--NEW_VER--                 THEN 
--NEW_VER--INSERT 
--NEW_VER--       (
--NEW_VER--              PARAM_NAME
--NEW_VER--            , PARAM_TYPE
--NEW_VER--            , PARAM_VAL_INT_CURR
--NEW_VER--            , PARAM_VAL_INT_MAX
--NEW_VER--            , PARAM_VAL_INT_DEFAULT
--NEW_VER--            , PARAM_DIMENSION
--NEW_VER--            , TASK_SUBTYPE
--NEW_VER--            , TASK_TYPE
--NEW_VER--            , VALID_FROM
--NEW_VER--            , VALID_TO
--NEW_VER--            , ENGINE_ID
--NEW_VER--            , SYSTEM_NAME
--NEW_VER--       ) 
--NEW_VER--       VALUES (
--NEW_VER--              S.PARAM_NAME
--NEW_VER--            , S.PARAM_TYPE
--NEW_VER--            , S.PARAM_VAL_INT_CURR
--NEW_VER--            , S.PARAM_VAL_INT_MAX
--NEW_VER--            , S.PARAM_VAL_INT_DEFAULT
--NEW_VER--            , S.PARAM_DIMENSION
--NEW_VER--            , S.TASK_SUBTYPE
--NEW_VER--            , S.TASK_TYPE
--NEW_VER--            , S.VALID_FROM
--NEW_VER--            , S.VALID_TO
--NEW_VER--            , S.ENGINE_ID
--NEW_VER--            , S.SYSTEM_NAME
--NEW_VER--       );
       
commit;


-- BIDEV-246 -- MERGE INTO CTRL_JOB T USING (
-- BIDEV-246 --   SELECT
-- BIDEV-246 --     '_INIT._INIT.DUMP_VALIDATOR_USE_CASE_01'         AS JOB_NAME
-- BIDEV-246 --     ,'INIT_LND_01'               AS STREAM_NAME
-- BIDEV-246 --     ,1000                                         AS PRIORITY
-- BIDEV-246 --     ,'_init._init.dump_validator_use_case.pl'    AS CMD_LINE
-- BIDEV-246 --     ,NULL                                         AS SRC_SYS_ID
-- BIDEV-246 --     ,'INIT_LND'               						AS PHASE
-- BIDEV-246 --     ,''                   									AS TABLE_NAME
-- BIDEV-246 --     ,'COMMAND_EDW'                                    AS JOB_CATEGORY
-- BIDEV-246 --     ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
-- BIDEV-246 --     ,0                                            AS CONT_ANYWAY
-- BIDEV-246 --     ,1                                            AS MAX_RUNS
-- BIDEV-246 --     ,1                                            AS ALWAYS_RESTART
-- BIDEV-246 --     ,NULL                                         AS STATUS_BEGIN
-- BIDEV-246 --     ,NULL                                         AS WAITING_HR
-- BIDEV-246 --     ,NULL                                         AS DEADLINE_HR
-- BIDEV-246 --     ,1                                            AS ENGINE_ID
-- BIDEV-246 --     ,NULL                                         AS JOB_DESC
-- BIDEV-246 --     ,'GENERATED'                                  AS AUTHOR
-- BIDEV-246 --     ,NULL                                         AS NOTE
-- BIDEV-246 --     ,'SMALL'                                      AS TOUGHNESS
-- BIDEV-246 --   FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
-- BIDEV-246 -- WHEN NOT MATCHED THEN 
-- BIDEV-246 --   INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
-- BIDEV-246 --   VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
-- BIDEV-246 -- WHEN MATCHED THEN
-- BIDEV-246 --   UPDATE SET
-- BIDEV-246 --     STREAM_NAME = S.STREAM_NAME  
-- BIDEV-246 --     ,PRIORITY = S.PRIORITY
-- BIDEV-246 --     ,CMD_LINE = S.CMD_LINE
-- BIDEV-246 --     ,SRC_SYS_ID = S.SRC_SYS_ID
-- BIDEV-246 --     ,PHASE = S.PHASE
-- BIDEV-246 --     ,TABLE_NAME = S.TABLE_NAME
-- BIDEV-246 --     ,JOB_CATEGORY = S.JOB_CATEGORY
-- BIDEV-246 --     ,JOB_TYPE = S.JOB_TYPE
-- BIDEV-246 --     ,CONT_ANYWAY = S.CONT_ANYWAY
-- BIDEV-246 --     ,MAX_RUNS = S.MAX_RUNS
-- BIDEV-246 --     ,ALWAYS_RESTART = S.ALWAYS_RESTART
-- BIDEV-246 --     ,STATUS_BEGIN = S.STATUS_BEGIN
-- BIDEV-246 --     ,WAITING_HR = S.WAITING_HR
-- BIDEV-246 --     ,DEADLINE_HR = S.DEADLINE_HR
-- BIDEV-246 --     ,ENGINE_ID = S.ENGINE_ID
-- BIDEV-246 --     ,JOB_DESC = S.JOB_DESC
-- BIDEV-246 --     ,AUTHOR = S.AUTHOR
-- BIDEV-246 --     ,NOTE = S.NOTE
-- BIDEV-246 --     ,TOUGHNESS = S.TOUGHNESS;
-- BIDEV-246 --     
-- BIDEV-246 -- 
-- BIDEV-246 -- MERGE INTO CTRL_JOB T USING (
-- BIDEV-246 --   SELECT
-- BIDEV-246 --     '_INIT._INIT.DUMP_VALIDATOR_USE_CASE_02'         AS JOB_NAME
-- BIDEV-246 --     ,'INIT_LND_I_02'               AS STREAM_NAME
-- BIDEV-246 --     ,1000                                         AS PRIORITY
-- BIDEV-246 --     ,'_init._init.dump_validator_use_case.pl'               										AS CMD_LINE
-- BIDEV-246 --     ,NULL                                         AS SRC_SYS_ID
-- BIDEV-246 --     ,'INIT_LND_I'               						AS PHASE
-- BIDEV-246 --     ,''                   									AS TABLE_NAME
-- BIDEV-246 --     ,'COMMAND_EDW'                                    AS JOB_CATEGORY
-- BIDEV-246 --     ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
-- BIDEV-246 --     ,0                                            AS CONT_ANYWAY
-- BIDEV-246 --     ,1                                            AS MAX_RUNS
-- BIDEV-246 --     ,1                                            AS ALWAYS_RESTART
-- BIDEV-246 --     ,NULL                                         AS STATUS_BEGIN
-- BIDEV-246 --     ,NULL                                         AS WAITING_HR
-- BIDEV-246 --     ,NULL                                         AS DEADLINE_HR
-- BIDEV-246 --     ,2                                            AS ENGINE_ID
-- BIDEV-246 --     ,NULL                                         AS JOB_DESC
-- BIDEV-246 --     ,'GENERATED'                                  AS AUTHOR
-- BIDEV-246 --     ,NULL                                         AS NOTE
-- BIDEV-246 --     ,'SMALL'                                      AS TOUGHNESS
-- BIDEV-246 --   FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
-- BIDEV-246 -- WHEN NOT MATCHED THEN 
-- BIDEV-246 --   INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
-- BIDEV-246 --   VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
-- BIDEV-246 -- WHEN MATCHED THEN
-- BIDEV-246 --   UPDATE SET
-- BIDEV-246 --     STREAM_NAME = S.STREAM_NAME  
-- BIDEV-246 --     ,PRIORITY = S.PRIORITY
-- BIDEV-246 --     ,CMD_LINE = S.CMD_LINE
-- BIDEV-246 --     ,SRC_SYS_ID = S.SRC_SYS_ID
-- BIDEV-246 --     ,PHASE = S.PHASE
-- BIDEV-246 --     ,TABLE_NAME = S.TABLE_NAME
-- BIDEV-246 --     ,JOB_CATEGORY = S.JOB_CATEGORY
-- BIDEV-246 --     ,JOB_TYPE = S.JOB_TYPE
-- BIDEV-246 --     ,CONT_ANYWAY = S.CONT_ANYWAY
-- BIDEV-246 --     ,MAX_RUNS = S.MAX_RUNS
-- BIDEV-246 --     ,ALWAYS_RESTART = S.ALWAYS_RESTART
-- BIDEV-246 --     ,STATUS_BEGIN = S.STATUS_BEGIN
-- BIDEV-246 --     ,WAITING_HR = S.WAITING_HR
-- BIDEV-246 --     ,DEADLINE_HR = S.DEADLINE_HR
-- BIDEV-246 --     ,ENGINE_ID = S.ENGINE_ID
-- BIDEV-246 --     ,JOB_DESC = S.JOB_DESC
-- BIDEV-246 --     ,AUTHOR = S.AUTHOR
-- BIDEV-246 --     ,NOTE = S.NOTE
-- BIDEV-246 --     ,TOUGHNESS = S.TOUGHNESS;
-- BIDEV-246 --     
-- BIDEV-246 --     commit;
      
MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.ALTER_TO_CURRENT_01'         AS JOB_NAME
    ,'INIT_LND_01'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.alter_to_current_prepare.pl'    AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,1                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    

MERGE INTO CTRL_JOB T USING (
  SELECT
    '_INIT._INIT.ALTER_TO_CURRENT_02'         AS JOB_NAME
    ,'INIT_LND_I_02'               AS STREAM_NAME
    ,1000                                         AS PRIORITY
    ,'_init._init.alter_to_current_prepare.pl'               										AS CMD_LINE
    ,NULL                                         AS SRC_SYS_ID
    ,'INIT_LND_I'               						AS PHASE
    ,''                   									AS TABLE_NAME
    ,'COMMAND_EDW'                                    AS JOB_CATEGORY
    ,'RUN_SCRIPT_INTERVAL'              		                  AS JOB_TYPE
    ,0                                            AS CONT_ANYWAY
    ,1                                            AS MAX_RUNS
    ,1                                            AS ALWAYS_RESTART
    ,NULL                                         AS STATUS_BEGIN
    ,NULL                                         AS WAITING_HR
    ,NULL                                         AS DEADLINE_HR
    ,2                                            AS ENGINE_ID
    ,NULL                                         AS JOB_DESC
    ,'GENERATED'                                  AS AUTHOR
    ,NULL                                         AS NOTE
    ,'SMALL'                                      AS TOUGHNESS
  FROM DUAL ) S ON (S.JOB_NAME = T.JOB_NAME)
WHEN NOT MATCHED THEN 
  INSERT (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE,TOUGHNESS)
  VALUES (S.JOB_NAME,S.STREAM_NAME,S.PRIORITY,S.CMD_LINE,S.SRC_SYS_ID,S.PHASE,S.TABLE_NAME,S.JOB_CATEGORY,S.JOB_TYPE,S.CONT_ANYWAY,S.MAX_RUNS,S.ALWAYS_RESTART,S.STATUS_BEGIN,S.WAITING_HR,S.DEADLINE_HR,S.ENGINE_ID,S.JOB_DESC,S.AUTHOR,S.NOTE,S.TOUGHNESS) 
WHEN MATCHED THEN
  UPDATE SET
    STREAM_NAME = S.STREAM_NAME  
    ,PRIORITY = S.PRIORITY
    ,CMD_LINE = S.CMD_LINE
    ,SRC_SYS_ID = S.SRC_SYS_ID
    ,PHASE = S.PHASE
    ,TABLE_NAME = S.TABLE_NAME
    ,JOB_CATEGORY = S.JOB_CATEGORY
    ,JOB_TYPE = S.JOB_TYPE
    ,CONT_ANYWAY = S.CONT_ANYWAY
    ,MAX_RUNS = S.MAX_RUNS
    ,ALWAYS_RESTART = S.ALWAYS_RESTART
    ,STATUS_BEGIN = S.STATUS_BEGIN
    ,WAITING_HR = S.WAITING_HR
    ,DEADLINE_HR = S.DEADLINE_HR
    ,ENGINE_ID = S.ENGINE_ID
    ,JOB_DESC = S.JOB_DESC
    ,AUTHOR = S.AUTHOR
    ,NOTE = S.NOTE
    ,TOUGHNESS = S.TOUGHNESS;
    
    commit;
      
/*
    BIDEV-246
    -----------
    Novy job, jehoz cilem je oznacit tabulky zpracovavane v Eng10.
    K nim se totiz validace ma chovat jinak. Co nejde do IFRS, neni nahravano na EP_DAQ.    
    Nakonec jsem to vyresil jinak, jezdi nam tam retencni job.
*/

-- OFF -- MERGE 
-- OFF -- INTO 
-- OFF --                  CTRL_JOB T 
-- OFF -- USING 
-- OFF --                  ( SELECT
-- OFF --                          '_INIT._INIT.LIST_IFRS_TABLES_01' AS JOB_NAME     ,'INIT_LND_01' AS STREAM_NAME  , 1000 AS PRIORITY
-- OFF --                        ,'_init._init.list_ifrs_tables.pl'  AS CMD_LINE     , NULL AS SRC_SYS_ID           ,'INIT_LND' AS PHASE
-- OFF --                        ,''                                 AS TABLE_NAME   ,'COMMAND_EDW' AS JOB_CATEGORY ,'RUN_SCRIPT_INTERVAL' AS JOB_TYPE
-- OFF --                        , 0                                 AS CONT_ANYWAY  , 3 AS MAX_RUNS                , 1 AS ALWAYS_RESTART
-- OFF --                        , NULL                              AS STATUS_BEGIN , NULL AS WAITING_HR           , NULL AS DEADLINE_HR
-- OFF --                        , 1                                 AS ENGINE_ID    , NULL AS JOB_DESC             ,'Herout' AS AUTHOR
-- OFF --                        , NULL                              AS NOTE         ,'SMALL' AS TOUGHNESS
-- OFF --                  FROM    DUAL ) 
-- OFF --                  S 
-- OFF -- ON (S.JOB_NAME = T.JOB_NAME)
-- OFF -- WHEN NOT MATCHED 
-- OFF --                  THEN
-- OFF -- INSERT 
-- OFF --              ( 
-- OFF --                           JOB_NAME    , STREAM_NAME 
-- OFF --                         , PRIORITY    , CMD_LINE 
-- OFF --                         , SRC_SYS_ID  , PHASE 
-- OFF --                         , TABLE_NAME  , JOB_CATEGORY 
-- OFF --                         , JOB_TYPE    , CONT_ANYWAY 
-- OFF --                         , MAX_RUNS    , ALWAYS_RESTART 
-- OFF --                         , STATUS_BEGIN, WAITING_HR 
-- OFF --                         , DEADLINE_HR , ENGINE_ID 
-- OFF --                         , JOB_DESC    , AUTHOR 
-- OFF --                         , NOTE        , TOUGHNESS 
-- OFF --              )
-- OFF --              VALUES 
-- OFF --              ( 
-- OFF --                           S.JOB_NAME    , S.STREAM_NAME 
-- OFF --                         , S.PRIORITY    , S.CMD_LINE 
-- OFF --                         , S.SRC_SYS_ID  , S.PHASE 
-- OFF --                         , S.TABLE_NAME  , S.JOB_CATEGORY 
-- OFF --                         , S.JOB_TYPE    , S.CONT_ANYWAY 
-- OFF --                         , S.MAX_RUNS    , S.ALWAYS_RESTART 
-- OFF --                         , S.STATUS_BEGIN, S.WAITING_HR 
-- OFF --                         , S.DEADLINE_HR , S.ENGINE_ID 
-- OFF --                         , S.JOB_DESC    , S.AUTHOR 
-- OFF --                         , S.NOTE        , S.TOUGHNESS 
-- OFF --              )
-- OFF -- WHEN MATCHED 
-- OFF --              THEN
-- OFF -- UPDATE 
-- OFF -- SET
-- OFF --        STREAM_NAME  = S.STREAM_NAME  , PRIORITY = S.PRIORITY             , CMD_LINE = S.CMD_LINE
-- OFF --      , SRC_SYS_ID   = S.SRC_SYS_ID   , PHASE = S.PHASE                   , TABLE_NAME = S.TABLE_NAME
-- OFF --      , JOB_CATEGORY = S.JOB_CATEGORY , JOB_TYPE = S.JOB_TYPE             , CONT_ANYWAY = S.CONT_ANYWAY
-- OFF --      , MAX_RUNS     = S.MAX_RUNS     , ALWAYS_RESTART = S.ALWAYS_RESTART , STATUS_BEGIN = S.STATUS_BEGIN
-- OFF --      , WAITING_HR   = S.WAITING_HR   , DEADLINE_HR = S.DEADLINE_HR       , ENGINE_ID = S.ENGINE_ID
-- OFF --      , JOB_DESC     = S.JOB_DESC     , AUTHOR = S.AUTHOR                 , NOTE = S.NOTE
-- OFF --      , TOUGHNESS    = S.TOUGHNESS;
-- OFF -- 
-- OFF -- MERGE 
-- OFF -- INTO 
-- OFF --                  CTRL_JOB T 
-- OFF -- USING 
-- OFF --                  ( SELECT
-- OFF --                          '_INIT._INIT.LIST_IFRS_TABLES_02' AS JOB_NAME     ,'INIT_LND_I_02' AS STREAM_NAME , 1000 AS PRIORITY
-- OFF --                        ,'_init._init.list_ifrs_tables.pl'  AS CMD_LINE     , NULL AS SRC_SYS_ID            ,'INIT_LND_I' AS PHASE
-- OFF --                        ,''                                 AS TABLE_NAME   ,'COMMAND_EDW' AS JOB_CATEGORY  ,'RUN_SCRIPT_INTERVAL' AS JOB_TYPE
-- OFF --                        , 0                                 AS CONT_ANYWAY  , 3 AS MAX_RUNS                 , 1 AS ALWAYS_RESTART
-- OFF --                        , NULL                              AS STATUS_BEGIN , NULL AS WAITING_HR            , NULL AS DEADLINE_HR
-- OFF --                        , 2                                 AS ENGINE_ID    , NULL AS JOB_DESC              ,'Herout' AS AUTHOR
-- OFF --                        , NULL                              AS NOTE         ,'SMALL' AS TOUGHNESS
-- OFF --                  FROM    DUAL ) 
-- OFF --                  S 
-- OFF -- ON (S.JOB_NAME = T.JOB_NAME)
-- OFF -- WHEN NOT MATCHED 
-- OFF --                  THEN
-- OFF -- INSERT 
-- OFF --              ( 
-- OFF --                           JOB_NAME    , STREAM_NAME 
-- OFF --                         , PRIORITY    , CMD_LINE 
-- OFF --                         , SRC_SYS_ID  , PHASE 
-- OFF --                         , TABLE_NAME  , JOB_CATEGORY 
-- OFF --                         , JOB_TYPE    , CONT_ANYWAY 
-- OFF --                         , MAX_RUNS    , ALWAYS_RESTART 
-- OFF --                         , STATUS_BEGIN, WAITING_HR 
-- OFF --                         , DEADLINE_HR , ENGINE_ID 
-- OFF --                         , JOB_DESC    , AUTHOR 
-- OFF --                         , NOTE        , TOUGHNESS 
-- OFF --              )
-- OFF --              VALUES 
-- OFF --              ( 
-- OFF --                           S.JOB_NAME    , S.STREAM_NAME 
-- OFF --                         , S.PRIORITY    , S.CMD_LINE 
-- OFF --                         , S.SRC_SYS_ID  , S.PHASE 
-- OFF --                         , S.TABLE_NAME  , S.JOB_CATEGORY 
-- OFF --                         , S.JOB_TYPE    , S.CONT_ANYWAY 
-- OFF --                         , S.MAX_RUNS    , S.ALWAYS_RESTART 
-- OFF --                         , S.STATUS_BEGIN, S.WAITING_HR 
-- OFF --                         , S.DEADLINE_HR , S.ENGINE_ID 
-- OFF --                         , S.JOB_DESC    , S.AUTHOR 
-- OFF --                         , S.NOTE        , S.TOUGHNESS 
-- OFF --              )
-- OFF -- WHEN MATCHED 
-- OFF --              THEN
-- OFF -- UPDATE 
-- OFF -- SET
-- OFF --        STREAM_NAME  = S.STREAM_NAME  , PRIORITY = S.PRIORITY             , CMD_LINE = S.CMD_LINE
-- OFF --      , SRC_SYS_ID   = S.SRC_SYS_ID   , PHASE = S.PHASE                   , TABLE_NAME = S.TABLE_NAME
-- OFF --      , JOB_CATEGORY = S.JOB_CATEGORY , JOB_TYPE = S.JOB_TYPE             , CONT_ANYWAY = S.CONT_ANYWAY
-- OFF --      , MAX_RUNS     = S.MAX_RUNS     , ALWAYS_RESTART = S.ALWAYS_RESTART , STATUS_BEGIN = S.STATUS_BEGIN
-- OFF --      , WAITING_HR   = S.WAITING_HR   , DEADLINE_HR = S.DEADLINE_HR       , ENGINE_ID = S.ENGINE_ID
-- OFF --      , JOB_DESC     = S.JOB_DESC     , AUTHOR = S.AUTHOR                 , NOTE = S.NOTE
-- OFF --      , TOUGHNESS    = S.TOUGHNESS;
-- OFF -- 
-- OFF -- COMMIT;

/* Statistiky

Insert into CTRL_JOB (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,TOUGHNESS,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE) values ('_INIT._INIT.STATS_QUE_EDW_00','INIT_EDW_00','1000','_init._init.prepare_stats_que.pl',null,'INIT_EDW',null,'COMMAND_EDW','RUN_SCRIPT_INTERVAL','SMALL','0','1','1',null,null,null,'0',null,'GENERATED',null);
Insert into CTRL_JOB (JOB_NAME,STREAM_NAME,PRIORITY,CMD_LINE,SRC_SYS_ID,PHASE,TABLE_NAME,JOB_CATEGORY,JOB_TYPE,TOUGHNESS,CONT_ANYWAY,MAX_RUNS,ALWAYS_RESTART,STATUS_BEGIN,WAITING_HR,DEADLINE_HR,ENGINE_ID,JOB_DESC,AUTHOR,NOTE) values ('_INIT._INIT.PROC_STATS_CNFG_EDW_00','INIT_EDW_00','1000','_init._init.prepare_stats_cnfg.pl',null,'INIT_EDW',null,'COMMAND_EDW','RUN_SCRIPT_INTERVAL','SMALL','0','1','1',null,null,null,'0',null,'GENERATED',null);
Insert into CTRL_JOB_DEPENDENCY (JOB_NAME,PARENT_JOB_NAME,REL_TYPE) values ('_INIT._INIT.PROC_STATS_CNFG_EDW_00','_INIT._INIT.STATS_QUE_EDW_00',null);
*/

/*
-- v rámci BIDEV-6540 dochází ke změně postupu nápočtu statistik, přestáváme používat procedury v EP_OPR
-- statistiky chceme přepočítávat v sobotním loadu (load_dttm), kalendářně tedy v neděli
 MERGE
 INTO
     CTRL_JOB_DEPENDENCY t
 USING (
         SELECT
             '_INIT._INIT.PROC_STATS_CNFG_EDW_00' as PARENT_JOB_NAME
           , '_INIT._INIT.STATS_QUE_EDW_00'       as JOB_NAME
           , NULL                                 as REL_TYPE
         FROM DUAL
     )
     s
 ON (
         s.JOB_NAME            = t.JOB_NAME
         AND s.PARENT_JOB_NAME = t.PARENT_JOB_NAME
     )
 WHEN MATCHED THEN
 UPDATE
 SET REL_TYPE = s.REL_TYPE
 WHEN NOT MATCHED THEN
 INSERT VALUES (
         s.JOB_NAME
       , s.PARENT_JOB_NAME
       , s.REL_TYPE)
 ;

 MERGE
 INTO
     CTRL_JOB t
 USING (
         SELECT
             '_INIT._INIT.PROC_STATS_CNFG_EDW_00' as JOB_NAME
           , 'INIT_EDW_00'                        as STREAM_NAME
           , 1000                                 as PRIORITY
           , '_init._init.prepare_stats_cnfg.pl'  as CMD_LINE
           , NULL                                 as SRC_SYS_ID
           , 'INIT_EDW'                           as PHASE
           , NULL                                 as TABLE_NAME
           , 'COMMAND_EDW'                        as JOB_CATEGORY
           , 'RUN_SCRIPT_INTERVAL'                as JOB_TYPE
           , 'SMALL'                              as TOUGHNESS
           , 0                                    as CONT_ANYWAY
           , 1                                    as MAX_RUNS
           , 1                                    as ALWAYS_RESTART
           , NULL                                 as STATUS_BEGIN
           , NULL                                 as WAITING_HR
           , NULL                                 as DEADLINE_HR
           , 0                                    as ENGINE_ID
           , NULL                                 as JOB_DESC
           , 'GENERATED'                          as AUTHOR
           , NULL                                 as NOTE
         FROM DUAL
     )
     s
 ON (
         s.JOB_NAME = t.JOB_NAME
     )
 WHEN MATCHED THEN
 UPDATE
 SET STREAM_NAME    = s.STREAM_NAME
   , PRIORITY       = s.PRIORITY
   , CMD_LINE       = s.CMD_LINE
   , SRC_SYS_ID     = s.SRC_SYS_ID
   , PHASE          = s.PHASE
   , TABLE_NAME     = s.TABLE_NAME
   , JOB_CATEGORY   = s.JOB_CATEGORY
   , JOB_TYPE       = s.JOB_TYPE
   , TOUGHNESS      = s.TOUGHNESS
   , CONT_ANYWAY    = s.CONT_ANYWAY
   , MAX_RUNS       = s.MAX_RUNS
   , ALWAYS_RESTART = s.ALWAYS_RESTART
   , STATUS_BEGIN   = s.STATUS_BEGIN
   , WAITING_HR     = s.WAITING_HR
   , DEADLINE_HR    = s.DEADLINE_HR
   , ENGINE_ID      = s.ENGINE_ID
   , JOB_DESC       = s.JOB_DESC
   , AUTHOR         = s.AUTHOR
   , NOTE           = s.NOTE
 WHEN NOT MATCHED THEN
 INSERT VALUES (
         s.JOB_NAME
       , s.STREAM_NAME
       , s.PRIORITY
       , s.CMD_LINE
       , s.SRC_SYS_ID
       , s.PHASE
       , s.TABLE_NAME
       , s.JOB_CATEGORY
       , s.JOB_TYPE
       , s.TOUGHNESS
       , s.CONT_ANYWAY
       , s.MAX_RUNS
       , s.ALWAYS_RESTART
       , s.STATUS_BEGIN
       , s.WAITING_HR
       , s.DEADLINE_HR
       , s.ENGINE_ID
       , s.JOB_DESC
       , s.AUTHOR
       , s.NOTE)
 ;
 
 MERGE
 INTO
     CTRL_JOB t
 USING (
         SELECT
             '_INIT._INIT.STATS_QUE_EDW_00'     as JOB_NAME
           , 'INIT_EDW_00'                      as STREAM_NAME
           , 1000                               as PRIORITY
           , '_init._init.prepare_stats_que.pl' as CMD_LINE
           , NULL                               as SRC_SYS_ID
           , 'INIT_EDW'                         as PHASE
           , NULL                               as TABLE_NAME
           , 'COMMAND_EDW'                      as JOB_CATEGORY
           , 'RUN_SCRIPT_INTERVAL'              as JOB_TYPE
           , 'SMALL'                            as TOUGHNESS
           , 0                                  as CONT_ANYWAY
           , 1                                  as MAX_RUNS
           , 1                                  as ALWAYS_RESTART
           , NULL                               as STATUS_BEGIN
           , NULL                               as WAITING_HR
           , NULL                               as DEADLINE_HR
           , 0                                  as ENGINE_ID
           , NULL                               as JOB_DESC
           , 'GENERATED'                        as AUTHOR
           , NULL                               as NOTE
         FROM DUAL
     )
     s
 ON (
         s.JOB_NAME = t.JOB_NAME
     )
 WHEN MATCHED THEN
 UPDATE
 SET STREAM_NAME    = s.STREAM_NAME
   , PRIORITY       = s.PRIORITY
   , CMD_LINE       = s.CMD_LINE
   , SRC_SYS_ID     = s.SRC_SYS_ID
   , PHASE          = s.PHASE
   , TABLE_NAME     = s.TABLE_NAME
   , JOB_CATEGORY   = s.JOB_CATEGORY
   , JOB_TYPE       = s.JOB_TYPE
   , TOUGHNESS      = s.TOUGHNESS
   , CONT_ANYWAY    = s.CONT_ANYWAY
   , MAX_RUNS       = s.MAX_RUNS
   , ALWAYS_RESTART = s.ALWAYS_RESTART
   , STATUS_BEGIN   = s.STATUS_BEGIN
   , WAITING_HR     = s.WAITING_HR
   , DEADLINE_HR    = s.DEADLINE_HR
   , ENGINE_ID      = s.ENGINE_ID
   , JOB_DESC       = s.JOB_DESC
   , AUTHOR         = s.AUTHOR
   , NOTE           = s.NOTE
 WHEN NOT MATCHED THEN
 INSERT VALUES (
         s.JOB_NAME
       , s.STREAM_NAME
       , s.PRIORITY
       , s.CMD_LINE
       , s.SRC_SYS_ID
       , s.PHASE
       , s.TABLE_NAME
       , s.JOB_CATEGORY
       , s.JOB_TYPE
       , s.TOUGHNESS
       , s.CONT_ANYWAY
       , s.MAX_RUNS
       , s.ALWAYS_RESTART
       , s.STATUS_BEGIN
       , s.WAITING_HR
       , s.DEADLINE_HR
       , s.ENGINE_ID
       , s.JOB_DESC
       , s.AUTHOR
       , s.NOTE)
 ;
*/
 MERGE
 INTO
     CTRL_JOB t
 USING (
         SELECT
             '_INIT._INIT.GET_LOADED_TABLES_00'     as JOB_NAME
           , 'INIT_EDW_00'                      as STREAM_NAME
           , 1000                               as PRIORITY
           , '_init._init.get_loaded_tables.pl' as CMD_LINE
           , NULL                               as SRC_SYS_ID
           , 'INIT_EDW'                         as PHASE
           , NULL                               as TABLE_NAME
           , 'COMMAND_EDW'                      as JOB_CATEGORY
           , 'RUN_SCRIPT_INTERVAL'              as JOB_TYPE
           , 'SMALL'                            as TOUGHNESS
           , 0                                  as CONT_ANYWAY
           , 1                                  as MAX_RUNS
           , 1                                  as ALWAYS_RESTART
           , NULL                               as STATUS_BEGIN
           , NULL                               as WAITING_HR
           , NULL                               as DEADLINE_HR
           , 0                                  as ENGINE_ID
           , NULL                               as JOB_DESC
           , 'GENERATED'                        as AUTHOR
           , NULL                               as NOTE
         FROM DUAL
     )
     s
 ON (
         s.JOB_NAME = t.JOB_NAME
     )
 WHEN MATCHED THEN
 UPDATE
 SET STREAM_NAME    = s.STREAM_NAME
   , PRIORITY       = s.PRIORITY
   , CMD_LINE       = s.CMD_LINE
   , SRC_SYS_ID     = s.SRC_SYS_ID
   , PHASE          = s.PHASE
   , TABLE_NAME     = s.TABLE_NAME
   , JOB_CATEGORY   = s.JOB_CATEGORY
   , JOB_TYPE       = s.JOB_TYPE
   , TOUGHNESS      = s.TOUGHNESS
   , CONT_ANYWAY    = s.CONT_ANYWAY
   , MAX_RUNS       = s.MAX_RUNS
   , ALWAYS_RESTART = s.ALWAYS_RESTART
   , STATUS_BEGIN   = s.STATUS_BEGIN
   , WAITING_HR     = s.WAITING_HR
   , DEADLINE_HR    = s.DEADLINE_HR
   , ENGINE_ID      = s.ENGINE_ID
   , JOB_DESC       = s.JOB_DESC
   , AUTHOR         = s.AUTHOR
   , NOTE           = s.NOTE
 WHEN NOT MATCHED THEN
 INSERT VALUES (
         s.JOB_NAME
       , s.STREAM_NAME
       , s.PRIORITY
       , s.CMD_LINE
       , s.SRC_SYS_ID
       , s.PHASE
       , s.TABLE_NAME
       , s.JOB_CATEGORY
       , s.JOB_TYPE
       , s.TOUGHNESS
       , s.CONT_ANYWAY
       , s.MAX_RUNS
       , s.ALWAYS_RESTART
       , s.STATUS_BEGIN
       , s.WAITING_HR
       , s.DEADLINE_HR
       , s.ENGINE_ID
       , s.JOB_DESC
       , s.AUTHOR
       , s.NOTE)
 ;
/*
-- 2022-11-01 - async stage - job který zakládá view EP_OPR.ENG0_LOAD_DTTM.
                            - potřebujeme ho pro konzumaci inkrementálních/ještě nezpracovaných dat
                            - řeší neexistenci fikce doručení na async stage vrstvě.
*/
MERGE
INTO
    CTRL_JOB T
USING (
        SELECT
            '_INIT._INIT.ENG0_LOAD_DTTM'     AS JOB_NAME
          ,'INIT_EDW_00'                     AS STREAM_NAME , 1000 AS PRIORITY
          ,'_init._init.eng0_load_dttm.bteq' AS CMD_LINE
          , NULL                             AS SRC_SYS_ID
          ,'INIT_EDW'                        AS PHASE
          ,''                                AS TABLE_NAME
          ,'COMMAND_EDW'                     AS JOB_CATEGORY
          ,'RUN_SCRIPT_INTERVAL'             AS JOB_TYPE 
          , 0 AS CONT_ANYWAY 
          , 1 AS MAX_RUNS 
          , 1 AS ALWAYS_RESTART
          , NULL                             AS STATUS_BEGIN
          , NULL                             AS WAITING_HR
          , NULL                             AS DEADLINE_HR , 0 AS ENGINE_ID
          , NULL                             AS JOB_DESC
          ,'Herout'                          AS AUTHOR
          , NULL                             AS NOTE
          ,'SMALL'                           AS TOUGHNESS
        FROM DUAL
    )
    S
ON (
        S.JOB_NAME = T.JOB_NAME
    )
WHEN NOT MATCHED THEN
INSERT (
        JOB_NAME
      , STREAM_NAME
      , PRIORITY
      , CMD_LINE
      , SRC_SYS_ID
      , PHASE
      , TABLE_NAME
      , JOB_CATEGORY
      , JOB_TYPE
      , CONT_ANYWAY
      , MAX_RUNS
      , ALWAYS_RESTART
      , STATUS_BEGIN
      , WAITING_HR
      , DEADLINE_HR
      , ENGINE_ID
      , JOB_DESC
      , AUTHOR
      , NOTE
      , TOUGHNESS)
    VALUES (
        S.JOB_NAME
      , S.STREAM_NAME
      , S.PRIORITY
      , S.CMD_LINE
      , S.SRC_SYS_ID
      , S.PHASE
      , S.TABLE_NAME
      , S.JOB_CATEGORY
      , S.JOB_TYPE
      , S.CONT_ANYWAY
      , S.MAX_RUNS
      , S.ALWAYS_RESTART
      , S.STATUS_BEGIN
      , S.WAITING_HR
      , S.DEADLINE_HR
      , S.ENGINE_ID
      , S.JOB_DESC
      , S.AUTHOR
      , S.NOTE
      , S.TOUGHNESS)
WHEN MATCHED THEN
UPDATE
SET STREAM_NAME    = S.STREAM_NAME
  , PRIORITY       = S.PRIORITY
  , CMD_LINE       = S.CMD_LINE
  , SRC_SYS_ID     = S.SRC_SYS_ID
  , PHASE          = S.PHASE
  , TABLE_NAME     = S.TABLE_NAME
  , JOB_CATEGORY   = S.JOB_CATEGORY
  , JOB_TYPE       = S.JOB_TYPE
  , CONT_ANYWAY    = S.CONT_ANYWAY
  , MAX_RUNS       = S.MAX_RUNS
  , ALWAYS_RESTART = S.ALWAYS_RESTART
  , STATUS_BEGIN   = S.STATUS_BEGIN
  , WAITING_HR     = S.WAITING_HR
  , DEADLINE_HR    = S.DEADLINE_HR
  , ENGINE_ID      = S.ENGINE_ID
  , JOB_DESC       = S.JOB_DESC
  , AUTHOR         = S.AUTHOR
  , NOTE           = S.NOTE
  , TOUGHNESS      = S.TOUGHNESS
;
 
 commit;
