#!/bin/bash
source $HOME/bin/basic-func.sh
if [[ $? -eq 0 ]]; then
  flog "Sourcing succeeded"
else
  echo "Sourcing failed"
  exit 1
fi

mount_points_def_dir=$HOME/bin/net-mount-points
domain_passfile=$HOME/Vaults/o2/domain-password.txt
vpn_client="/opt/cisco/anyconnect/bin/vpn"
vpn_client_ui="/opt/cisco/anyconnect/bin/vpnui"

what_to_do=$(echo "mount a git fetch
mount
jenom vpn" | fzf)

# sanity check and cryfs
[[ -d "$mount_points_def_dir" ]] || fdie "Directory does not exist: $mount_points_def_dir"
if [[ ! -f "$domain_passfile" ]]; then
    flog "try to read: $domain_passfile" info
    cryfs $HOME/.local/share/plasma-vault/o2.enc $HOME/Vaults/o2/ || fdie "cryfs failed"
fi
[[ -f "$domain_passfile" ]] || fdie "File does not exist: $domain_passfile"


# načti secrets a další
var_me=$(whoami)
var_uid=$(id -u $var_me)
var_gid=$(id -g $var_me)
var_pass=$(<$HOME/Vaults/o2/domain-password.txt)
[[ -z $var_pass ]] && fdie "failed to read domain password from $domain_passfile"

flog "secrets read sucessfully" info

# test napojení na VPN
# is_on_vpn=$(nmcli connection show --active | grep extvpn.o2.cz)
is_on_vpn=$(ps aux | grep vpnui | grep -v grep | awk ' { print $2 }')
if [[ -z "$is_on_vpn" ]]; then
	flog "connecting to VPN" warning
	# nmcli connection up extvpn.o2.cz || fdie "failed to connect"
    # $vpn_client connect extvpn.o2.cz || fdie "failed to connect"
    $vpn_client_ui >/dev/null 2>&1 & 
    
    # infinite loop
    while true; do         
        sleep 1
        vpn_state=$($vpn_client state | grep Connected | head -n 1 | awk '{print $4}')
        if [[ "$vpn_state" =~ "Connected" ]]; then
            flog "VPN is connected" info
            break
        fi
        flog "waiting on VPN to connect..." warning
    done    
else
    flog "VPN is already connected" info
fi


# proveď mount
#if [ "${__MOUNT_DRIVES__^^}" = "Y" ]; then 
if [[ "$what_to_do" =~ "mount" ]]; then
    for mount_point in "$mount_points_def_dir"/*; do
        flog "read $mount_point" info
        source $mount_point

        if [ -d "$_MNT_" ]; then
            findmnt $_MNT_ >/dev/null 2>&1
            if [ $? -eq 0 ]; then
                flog "directory is already mounted: $_MNT_" warning
            else
                flog "mounting $_SRC_" info
                MM_OPTIONS="domain=TO2,username=X0548834,"
                MM_OPTIONS+="password=$var_pass,"
                MM_OPTIONS+="uid=$var_uid,"
                MM_OPTIONS+="gid=$var_gid,"
                MM_OPTIONS+="dir_mode=0755,file_mode=0755"
                MM_OPTIONS+=$_SUFFIX_
                sudo mount -t cifs -o $MM_OPTIONS $_SRC_ $_MNT_

                if [[ $? -gt 0 ]]; then
                    flog "failed to mount $_SRC_" error
                fi
            fi
        fi
    done
fi

# odjeď git fetch
if [[ "$what_to_do" =~ "git" ]]; then
    $HOME/bin/git-o2fetch
fi
