#!/bin/bash

MM_DEFDIR=$HOME/bin/net-mount-points
MM_PASSWORD_FILE=$HOME/Vaults/o2/domain-password.txt

# colors
MM_ERR="\e[31mERR\e[0m"
MM_TRY="\033[33mTRY\033[0m"
MM_OK="\033[34mOK\033[0m "


# kontrola existence adresáře s definicemi
echo -e "$MM_TRY: test mount points config: $MM_DEFDIR"
if [ ! -d "$MM_DEFDIR" ]; then
    echo -e "$MM_ERR: Directory does not exist: $MM_DEFDIR <directory>"
    exit 1
fi
echo -e "$MM_OK: mount point config dir exists"

# kontrola existence secrets souboru
echo -e "$MM_TRY: test secrets file: $MM_PASSWORD_FILE"
if [ ! -f "$MM_PASSWORD_FILE" ]; then
    echo -e "$MM_ERR: File does not exist: $MM_PASSWORD_FILE"

    cryfs $HOME/.local/share/plasma-vault/o2.enc $HOME/Vaults/o2/
fi

echo -e "$MM_TRY: test secrets file: $MM_PASSWORD_FILE"
if [ ! -f "$MM_PASSWORD_FILE" ]; then
    echo -e "$MM_ERR: File does not exist: $MM_PASSWORD_FILE"
    exit 1
fi
# chceme namapovat disky?
read -t 4 -p "Namapovat disky? [y/N]" __MOUNT_DRIVES__
__MOUNT_DRIVES__="${__MOUNT_DRIVES__:-N}"

# načti secrets a další
echo -e "$MM_TRY: read secrets: $MM_PASSWORD_FILE"
_ME_=`whoami`
_UID_=`id -u $_ME_`
_GID_=`id -g $_ME_`
_PASS_=`cat ~/Vaults/o2/domain-password.txt`

if [ -z "$_PASS_" ]; then
    echo -e "$ERR: read secrets: failed: $MM_PASSWORD_FILE"
    exit 1
fi
echo -e "$MM_OK: secrets read"

# test napojení na VPN
IS_O2_CONUP=`nmcli connection show --active | grep extvpn.o2.cz`
if [ -z "$IS_O2_CONUP" ]; then
	echo -e "$ERR: connecting to VPN"
	nmcli connection up extvpn.o2.cz
else
	echo -e "IS_O2_CONUP=>$IS_O2_CONUP<"
fi




# proveď mount
if [ "${__MOUNT_DRIVES__^^}" = "Y" ]; then 
    for MM_DEFFILE in "$MM_DEFDIR"/*; do
        echo -e "$MM_TRY: read $MM_DEFFILE"
        source $MM_DEFFILE

        if [ -d "$_MNT_" ]; then
            findmnt $_MNT_ >/dev/null 2>&1
            if [ $? -eq 0 ]; then
                echo -e "$MM_OK: directory is already mounted: $_MNT_"
            else
                echo -e "$MM_TRY: mounting $_SRC_"
                MM_OPTIONS="domain=TO2,username=X0548834,"
                MM_OPTIONS+="password=$_PASS_,"
                MM_OPTIONS+="uid=$_UID_,"
                MM_OPTIONS+="gid=$_GID_,"
                MM_OPTIONS+="dir_mode=0755,file_mode=0755"
                MM_OPTIONS+=$_SUFFIX_
                sudo mount -t cifs -o $MM_OPTIONS $_SRC_ $_MNT_

                if [ $? -eq 0 ]; then
                    echo -e "$MM_OK: mounted"
                else
                    echo -e "$MM_ERR: error ???"
                fi
            fi
        fi
    done
else
    echo ""
    echo -e "$MM_ERR: přeskakuji mapování disků!"
fi

# odjeď git pull
read -t 4 -p "Git pull? [y/N]" __PULL__
__PULL__="${__PULL__:-Y}"

if [ "${__PULL__^^}" = "Y" ]; then 
    $HOME/bin/pull
fi
