#!/usr/bin/env bash
# doc: Commit a push změn v bimeta repozitáři s auto-generovanou zprávou

# colors
COLOR_ERR="\e[31mERR\e[0m"
COLOR_TRY="\033[33mTRY\033[0m"
COLOR_OK="\033[34mOK\033[0m "

# create a bail out function that accepts a message and exists with an error code
bail_out() {
    echo -e "$COLOR_ERR: $1"
    read -p "Press enter to continue..."
    exit 1
}

check_repo_clean() {
    # Check if we are inside a git repository
    git rev-parse --is-inside-work-tree >/dev/null 2>&1 || bail_out "Not inside a git repository."

    # Return 1 if there are any changes (staged, unstaged, untracked, deleted, renamed, etc.)
    if [ -n "$(git status --porcelain)" ]; then
        return 1
    fi
    return 0
}

commit_message=$(pwd | awk -F'/' '{split($NF, a, "-"); printf "%s-%s: %s-%s\n", a[1], a[2], a[3], a[4]}')
BIMETA_DIR=$HOME/o2/BIDEV-MAIN_bimeta
PWD=$(pwd)


# no changes => nothing to do
cd $BIMETA_DIR      || bail_out "Failed to change directory to $BIMETA_DIR."
check_repo_clean    && exit 0

echo -e "repo is not clean, proceeding with commit"

commit=$( \
    printf "skip\ncommit\ncommit and push" | \
    fzf \
        --prompt="Poslat commit na bimeta?" \
        --header="commit message: '$commit_message'" )

if [[ "$commit" == *commit* ]]; then
    echo -e "$COLOR_TRY: $BIMETA_DIR: committing changes with message '$commit_message'"
    git add . || bail_out "$BIMETA_DIR: Failed to stage changes."
    git commit -m "$commit_message" || bail_out "$BIMETA_DIR: Failed to commit changes."
    echo -e "$COLOR_OK: $BIMETA_DIR: changes committed successfully."
else
    echo -e "$COLOR_OK: $BIMETA_DIR: no changes committed."
    exit 0
fi

if [[ "$commit" == *push* ]]; then
    echo -e "$COLOR_TRY: $BIMETA_DIR: pushing !!!"
    git push || bail_out "$BIMETA_DIR: Failed to push changes."
    echo -e "$COLOR_OK: $BIMETA_DIR: push successful."
else
    echo -e "$COLOR_ERR: $BIMETA_DIR: NO PUSH!"    
    read -p "Press enter to continue..."
    exit 0
fi