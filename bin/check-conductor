#!/bin/bash

# colors
MM_ERR="\e[31mERR\e[0m"
MM_TRY="\033[33mTRY\033[0m"
MM_OK="\033[34mOK\033[0m "


# produkce a mount point
echo -e "$MM_TRY: checking mount point"

MNT_FILE="$HOME/dotfiles/bin/net-mount-points/virt_node@prod"
source $MNT_FILE
findmnt $_MNT_ >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo -e "$MM_ERR: not mounted: $_MNT_"
    exit 1
fi
echo -e "$MM_OK: mounted"

# vyber engine
PMROOTDIR=$(echo "PMRootDir_ASG
PMRootDir_A29
" | fzf)

if [[ -z "$PMROOTDIR" ]] ; then
    echo -e "$MM_ERR: Empty selection"
    exit 1    
else
    echo -e "$MM_OK: Checking $PMROOTDIR"
fi

PMWORKFLOWLOGDIR=$(echo $PMROOTDIR | sed s/PMRootDir/PMWorkflowLogDir/)

# vyber jeden mart
DEF_MASK="$_MNT_/EDW/$PMROOTDIR/py_mart_def/*.json"
echo -e "$MM_TRY: get list of def files"
MART=$(ls -1 $DEF_MASK | cut -d '/' -f 7  | sed  s/.json// | fzf)
echo $MART

# pokud nemáš mart, nic nedělej
if [[ -z "$MART" ]] ; then
    echo -e "$MM_ERR: Empty selection"
    exit 1    
else
    echo -e "$MM_OK: Checking $MART"
fi

# pokud máš mart, projeď jeho historii
LOG_FILE=$(find "$_MNT_/EDW/$PMWORKFLOWLOGDIR" -maxdepth 1 -type f -name "*CONDUCTOR*" | head -n 1 )
echo -e "$MM_TRY: checking: $LOG_FILE"

cat $LOG_FILE | grep $MART | grep -E 'next_run_dttm|missing|_restart_mart_starter_job' | less

#  grep "critical" | grep $MART | tail