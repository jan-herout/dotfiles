#!/bin/bash

# colors
COLOR_ERR="\e[31mERR\e[0m"
COLOR_TRY="\033[33mTRY\033[0m"
COLOR_OK="\033[34mOK\033[0m "

# paths
FEATURE_PATH=$HOME/o2-feature
TEMPLATE_PATH=$HOME/o2/bidev-template
REPO_LIST_FILE=$FEATURE_PATH/repo-list.txt

# create a bail out function that accepts a message and exists with an error code
bail_out() {
    echo -e "$COLOR_ERR: $1"
    read -p "Press enter to continue..."
    exit 1
}


##################################################

cd $FEATURE_PATH || bail_out "Failed to change directory to $FEATURE_PATH."

# Save list of directories before
before=$(ls -d */)
echo $before

# Run cookiecutter; initial commit is created by the cookiecutter
cookiecutter $HOME/o2/bidev-template

# Save list of directories after
after=$(ls -d */)

# compare before and after state to get name of the new dir
new_dir=$(comm -13 <(echo "$before") <(echo "$after"))
[ "$new_dir" == "" ] && bail_out "No new directory found, bail out."


echo -e "$COLOR_OK: adresář založen! <$new_dir>"

# můžeme chtít založit nové repo na githubu
pat_file=$HOME/Vaults/o2/github/jan_herout_pat
[ ! -f "$PAT_FILE" ] || bail_out "PAT file není dostupný, bail: $PAT_FILE"

# použij fzf, a zjisti pat
github_pat=$( \
    cat $pat_file | \
    fzf --prompt="Zadej github PAT (chceš personal/osobní PAT): " --header="Zadej github PAT pro přístup k API" | \
    awk '{print $2}' \
    )
[ -z "$github_pat" ] && bail_out "No PAT provided, bail out."

# optionally, call github API to create a new personal repo
# these are the inputs for the action
github_username="jan-herout_o2cz"

# use CURL, call GitHub API to create a new repo; use github_user, and github_pat for authorization
echo -e "$COLOR_TRY: creating new repo on GitHub for $new_dir"

repo_name=$(basename "$new_dir")
api_url="https://api.github.com/user/repos"

# set proxy on, use CURL to create a new repo
# -o /dev/null to suppress output
# -w "%{http_code}" to output only the HTTP status code
source $HOME/bin/set-proxy-on
response=$(curl -L \
  -w "%{http_code}" \
  -o /dev/null \
  -s \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer $github_pat" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/user/repos \
  -d "{\"name\":\"$repo_name\",\"description\":\"working repo: $repo_name\",\"homepage\":\"https://github.com\",\"private\":true,\"is_template\":false}")

# check if the response is 201 Created
if [ "$response" -ne 201 ]; then
    bail_out "Failed to create repository on GitHub. HTTP response code: $response"
else
    echo -e "$COLOR_OK: repository created successfully on GitHub: $repo_name"
fi

echo -e "$COLOR_TRY: adding remote origin for $repo_name"
remote_url="https://$github_pat@github.com/jan-herout_o2cz/$repo_name.git"

# add remote
cd $FEATURE_PATH/$new_dir || bail_out "Failed to change directory to $HOME/o2-feature/$new_dir"
git remote add origin $remote_url || bail_out "Failed to add remote origin for $remote_url"
echo -e "$COLOR_OK: remote origin added successfully"

# push
echo -e "$COLOR_TRY: git push: $repo_name"
git push -u origin main || bail_out "Failed to push to remote repository."
echo -e "$COLOR_OK: git push successful, repo is ready to use: $repo_name"

# add repo address and creation date to the list of repos
current_date=$(date +"%Y-%m-%d")
repo_home_page="https://github.com/jan-herout_o2cz/$repo_name"
echo "$current_date $repo_name $repo_home_page" >> $REPO_LIST_FILE || bail_out "Failed to append to repo list file: $REPO_LIST_FILE"
